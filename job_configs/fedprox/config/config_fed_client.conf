format_version = 2
app_script = "Exercise08.py"
app_config = "--batch_sz=32 --epochs=15 --lr=0.001 --split_method='uniform' --fedproxloss_mu=1e-5"
executors = [
  {
    tasks = [
      "train"
    ]
    executor {
      path = "nvflare.app_opt.pt.client_api_launcher_executor.PTClientAPILauncherExecutor"
      args {
        launcher_id = "launcher"
        pipe_id = "pipe"
        heartbeat_timeout = 60
        params_exchange_format = "pytorch"
        params_transfer_type = "DIFF"
        train_with_evaluation = true
      }
    }
  }
]
task_data_filters = []
task_result_filters = []
components = [
  {
    id = "launcher"
    path = "nvflare.app_common.launchers.subprocess_launcher.SubprocessLauncher"
    args {
      script = "python3 custom/{app_script}  {app_config} "
      launch_once = true
    }
  },
  {
    id = "pipe"
    path = "nvflare.fuel.utils.pipe.file_pipe.FilePipe"
    args {
      mode = "PASSIVE"
      root_path = "{WORKSPACE}/{JOB_ID}/{SITE_NAME}"
    }
  },
  {
      id = "metrics_pipe"
      path = "nvflare.fuel.utils.pipe.file_pipe.FilePipe"
      args {
        mode = "PASSIVE"
        # root_path: is the directory location of the parameters exchange.
        # You can also set it to an absolute path in your system.
        root_path = "{WORKSPACE}/{JOB_ID}/{SITE_NAME}"
      }
    },
    {
      id = "metric_relay"
      path = "nvflare.app_common.widgets.metric_relay.MetricRelay"
      args {
        pipe_id = "metrics_pipe"
        event_type = "fed.analytix_log_stats"
        # how fast should it read from the peer
        read_interval = 0.1
      }
    },
    {
      # we use this component so the client api `flare.init()` can get required information
      id = "config_preparer"
      path = "nvflare.app_common.widgets.external_configurator.ExternalConfigurator"
      args {
        component_ids = ["metric_relay"]
      }
    }
]


